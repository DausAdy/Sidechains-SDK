{
	"openrpc": "1.2.4",
	"info": {
		"title": "Ethereum JSON-RPC Specification",
		"description": "A specification of the standard interface for Ethereum clients.",
		"license": {
			"name": "CC0-1.0",
			"url": "https://creativecommons.org/publicdomain/zero/1.0/legalcode"
		},
		"version": "0.0.0"
	},
	"methods": [
		{
			"name": "eth_getBlockByHash",
			"summary": "Returns information about a block by hash.",
			"params": [
				{
					"name": "Block hash",
					"required": true,
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
					}
				},
				{
					"name": "Hydrated transactions",
					"required": true,
					"schema": {
						"title": "hydrated",
						"type": "boolean"
					}
				}
			],
			"result": {
				"name": "Block information",
				"schema": {
					"title": "Block object",
					"type": "object",
					"required": [
						"parentHash",
						"sha3Uncles",
						"miner",
						"stateRoot",
						"transactionsRoot",
						"receiptsRoot",
						"logsBloom",
						"number",
						"gasLimit",
						"gasUsed",
						"timestamp",
						"extraData",
						"mixHash",
						"nonce",
						"size",
						"transactions",
						"uncles"
					],
					"properties": {
						"parentHash": {
							"title": "Parent block hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"sha3Uncles": {
							"description": "not included, returns 0x0",
							"title": "Ommers hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"miner": {
							"title": "Coinbase",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"stateRoot": {
							"title": "State root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"transactionsRoot": {
							"title": "Transactions root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"receiptsRoot": {
							"title": "Receipts root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"logsBloom": {
							"description": "not included now, returns 0x0",
							"title": "Bloom filter",
							"type": "string",
							"pattern": "^0x[0-9a-f]{512}$"
						},
						"difficulty": {
							"description": "not included",
							"title": "Difficulty",
							"type": "string",
							"pattern": "^0x[0-9a-f]*$"
						},
						"number": {
							"title": "Number",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"gasLimit": {
							"description": "fixed values now",
							"title": "Gas limit",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"gasUsed": {
							"description": "fixed values now",
							"title": "Gas used",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"timestamp": {
							"title": "Timestamp",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"extraData": {
							"description": "not included, returns 0x0",
							"title": "Extra data",
							"type": "string",
							"pattern": "^0x[0-9a-f]*$"
						},
						"mixHash": {
							"description": "not included, returns 0x0",
							"title": "Mix hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"nonce": {
							"description": "not included, returns 0x0",
							"title": "Nonce",
							"type": "string",
							"pattern": "^0x[0-9a-f]{16}$"
						},
						"totalDifficulty": {
							"description": "not included",
							"title": "Total difficult",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"baseFeePerGas": {
							"description": "not included",
							"title": "Base fee per gas",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"size": {
							"title": "Block size",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"transactions": {
							"anyOf": [
								{
									"title": "Transaction hashes",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									}
								},
								{
									"title": "Full transactions",
									"type": "array",
									"items": {
										"oneOf": [
											{
												"title": "Signed 1559 Transaction",
												"type": "object",
												"required": [
													"accessList",
													"chainId",
													"gas",
													"input",
													"maxFeePerGas",
													"maxPriorityFeePerGas",
													"nonce",
													"r",
													"s",
													"type",
													"value",
													"yParity"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"maxPriorityFeePerGas": {
														"title": "max priority fee per gas",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
													},
													"maxFeePerGas": {
														"title": "max fee per gas",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
													},
													"accessList": {
														"title": "accessList",
														"type": "array",
														"description": "EIP-2930 access list - not included - always empty",
														"items": {
															"title": "Access list entry",
															"type": "object",
															"properties": {
																"address": {
																	"title": "hex encoded address",
																	"type": "string",
																	"pattern": "^0x[0-9,a-f,A-F]{40}$"
																},
																"storageKeys": {
																	"type": "array",
																	"items": {
																		"title": "32 byte hex value",
																		"type": "string",
																		"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
																	}
																}
															}
														}
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"yParity": {
														"title": "yParity",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											},
											{
												"title": "Signed 2930 Transaction",
												"type": "object",
												"required": [
													"accessList",
													"chainId",
													"gas",
													"gasPrice",
													"input",
													"nonce",
													"r",
													"s",
													"type",
													"value",
													"yParity"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"gasPrice": {
														"title": "gas price",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The gas price willing to be paid by the sender in wei"
													},
													"accessList": {
														"title": "accessList",
														"type": "array",
														"description": "EIP-2930 access list - not included - always empty",
														"items": {
															"title": "Access list entry",
															"type": "object",
															"properties": {
																"address": {
																	"title": "hex encoded address",
																	"type": "string",
																	"pattern": "^0x[0-9,a-f,A-F]{40}$"
																},
																"storageKeys": {
																	"type": "array",
																	"items": {
																		"title": "32 byte hex value",
																		"type": "string",
																		"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
																	}
																}
															}
														}
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"yParity": {
														"title": "yParity",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											},
											{
												"title": "Signed Legacy Transaction",
												"type": "object",
												"required": [
													"gas",
													"gasPrice",
													"input",
													"nonce",
													"r",
													"s",
													"type",
													"v",
													"value"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"gasPrice": {
														"title": "gas price",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The gas price willing to be paid by the sender in wei"
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"v": {
														"title": "v",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											}
										]
									}
								}
							]
						},
						"uncles": {
							"description": "not included",
							"title": "Uncles",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						}
					}
				}
			}
		},
		{
			"name": "eth_getBlockByNumber",
			"summary": "Returns information about a block by number.",
			"params": [
				{
					"name": "Block",
					"required": true,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				},
				{
					"name": "Hydrated transactions",
					"required": true,
					"schema": {
						"title": "hydrated",
						"type": "boolean"
					}
				}
			],
			"result": {
				"name": "Block information",
				"schema": {
					"title": "Block object",
					"type": "object",
					"required": [
						"parentHash",
						"sha3Uncles",
						"miner",
						"stateRoot",
						"transactionsRoot",
						"receiptsRoot",
						"logsBloom",
						"number",
						"gasLimit",
						"gasUsed",
						"timestamp",
						"extraData",
						"mixHash",
						"nonce",
						"size",
						"transactions",
						"uncles"
					],
					"properties": {
						"parentHash": {
							"title": "Parent block hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"sha3Uncles": {
							"description": "not included, returns 0x0",
							"title": "Ommers hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"miner": {
							"title": "Coinbase",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"stateRoot": {
							"title": "State root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"transactionsRoot": {
							"title": "Transactions root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"receiptsRoot": {
							"title": "Receipts root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"logsBloom": {
							"description": "not included now, returns 0x0",
							"title": "Bloom filter",
							"type": "string",
							"pattern": "^0x[0-9a-f]{512}$"
						},
						"difficulty": {
							"description": "not included",
							"title": "Difficulty",
							"type": "string",
							"pattern": "^0x[0-9a-f]*$"
						},
						"number": {
							"title": "Number",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"gasLimit": {
							"description": "fixed value now",
							"title": "Gas limit",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"gasUsed": {
							"description": "fixed value now",
							"title": "Gas used",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"timestamp": {
							"title": "Timestamp",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"extraData": {
							"description": "not included, returns 0x0",
							"title": "Extra data",
							"type": "string",
							"pattern": "^0x[0-9a-f]*$"
						},
						"mixHash": {
							"description": "not included, returns 0x0",
							"title": "Mix hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"nonce": {
							"description": "not included, returns 0x0",
							"title": "Nonce",
							"type": "string",
							"pattern": "^0x[0-9a-f]{16}$"
						},
						"totalDifficulty": {
							"description": "not included",
							"title": "Total difficult",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"baseFeePerGas": {
							"description": "not included",
							"title": "Base fee per gas",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"size": {
							"title": "Block size",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"transactions": {
							"anyOf": [
								{
									"title": "Transaction hashes",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									}
								},
								{
									"title": "Full transactions",
									"type": "array",
									"items": {
										"oneOf": [
											{
												"title": "Signed 1559 Transaction",
												"type": "object",
												"required": [
													"accessList",
													"chainId",
													"gas",
													"input",
													"maxFeePerGas",
													"maxPriorityFeePerGas",
													"nonce",
													"r",
													"s",
													"type",
													"value",
													"yParity"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"maxPriorityFeePerGas": {
														"title": "max priority fee per gas",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
													},
													"maxFeePerGas": {
														"title": "max fee per gas",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
													},
													"accessList": {
														"title": "accessList",
														"type": "array",
														"description": "EIP-2930 access list - not included - always empty",
														"items": {
															"title": "Access list entry",
															"type": "object",
															"properties": {
																"address": {
																	"title": "hex encoded address",
																	"type": "string",
																	"pattern": "^0x[0-9,a-f,A-F]{40}$"
																},
																"storageKeys": {
																	"type": "array",
																	"items": {
																		"title": "32 byte hex value",
																		"type": "string",
																		"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
																	}
																}
															}
														}
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"yParity": {
														"title": "yParity",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											},
											{
												"title": "Signed 2930 Transaction",
												"type": "object",
												"required": [
													"accessList",
													"chainId",
													"gas",
													"gasPrice",
													"input",
													"nonce",
													"r",
													"s",
													"type",
													"value",
													"yParity"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"gasPrice": {
														"title": "gas price",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The gas price willing to be paid by the sender in wei"
													},
													"accessList": {
														"title": "accessList",
														"type": "array",
														"description": "EIP-2930 access list - not included - always empty",
														"items": {
															"title": "Access list entry",
															"type": "object",
															"properties": {
																"address": {
																	"title": "hex encoded address",
																	"type": "string",
																	"pattern": "^0x[0-9,a-f,A-F]{40}$"
																},
																"storageKeys": {
																	"type": "array",
																	"items": {
																		"title": "32 byte hex value",
																		"type": "string",
																		"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
																	}
																}
															}
														}
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"yParity": {
														"title": "yParity",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											},
											{
												"title": "Signed Legacy Transaction",
												"type": "object",
												"required": [
													"gas",
													"gasPrice",
													"input",
													"nonce",
													"r",
													"s",
													"type",
													"v",
													"value"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"gasPrice": {
														"title": "gas price",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The gas price willing to be paid by the sender in wei"
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"v": {
														"title": "v",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											}
										]
									}
								}
							]
						},
						"uncles": {
							"title": "Uncles",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						}
					}
				}
			}
		},
		{
			"name": "eth_chainId",
			"summary": "Returns the chain ID of the current network.",
			"params": [],
			"result": {
				"name": "Chain ID",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_blockNumber",
			"summary": "Returns the number of most recent block.",
			"params": [],
			"result": {
				"name": "Block number",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_call",
			"summary": "Executes a new message call immediately without creating a transaction on the block chain.",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"schema": {
						"title": "Transaction object with sender",
						"type": "object",
						"required": [
							"from"
						],
						"oneOf": [
							{
								"type": "object",
								"title": "EIP-1559 transaction.",
								"required": [
									"type",
									"nonce",
									"gas",
									"value",
									"input",
									"maxFeePerGas",
									"maxPriorityFeePerGas",
									"chainId",
									"accessList"
								],
								"properties": {
									"type": {
										"title": "type",
										"type": "string",
										"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
									},
									"nonce": {
										"title": "nonce",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"to": {
										"title": "to address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"gas": {
										"title": "gas limit",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"value": {
										"title": "value",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"input": {
										"title": "input data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"maxPriorityFeePerGas": {
										"title": "max priority fee per gas",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
									},
									"maxFeePerGas": {
										"title": "max fee per gas",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
									},
									"accessList": {
										"title": "accessList",
										"type": "array",
										"description": "EIP-2930 access list - will be ignored",
										"items": {
											"title": "Access list entry",
											"type": "object",
											"properties": {
												"address": {
													"title": "hex encoded address",
													"type": "string",
													"pattern": "^0x[0-9,a-f,A-F]{40}$"
												},
												"storageKeys": {
													"type": "array",
													"items": {
														"title": "32 byte hex value",
														"type": "string",
														"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
													}
												}
											}
										}
									},
									"chainId": {
										"title": "chainId",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "Chain ID that this transaction is valid on."
									}
								}
							},
							{
								"type": "object",
								"title": "EIP-2930 transaction.",
								"required": [
									"type",
									"nonce",
									"gas",
									"value",
									"input",
									"gasPrice",
									"chainId",
									"accessList"
								],
								"properties": {
									"type": {
										"title": "type",
										"type": "string",
										"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
									},
									"nonce": {
										"title": "nonce",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"to": {
										"title": "to address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"gas": {
										"title": "gas limit",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"value": {
										"title": "value",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"input": {
										"title": "input data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"gasPrice": {
										"title": "gas price",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "The gas price willing to be paid by the sender in wei"
									},
									"accessList": {
										"title": "accessList",
										"type": "array",
										"description": "EIP-2930 access list - not supported",
										"items": {
											"title": "Access list entry",
											"type": "object",
											"properties": {
												"address": {
													"title": "hex encoded address",
													"type": "string",
													"pattern": "^0x[0-9,a-f,A-F]{40}$"
												},
												"storageKeys": {
													"type": "array",
													"items": {
														"title": "32 byte hex value",
														"type": "string",
														"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
													}
												}
											}
										}
									},
									"chainId": {
										"title": "chainId",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "Chain ID that this transaction is valid on."
									}
								}
							},
							{
								"type": "object",
								"title": "Legacy transaction.",
								"required": [
									"type",
									"nonce",
									"gas",
									"value",
									"input",
									"gasPrice"
								],
								"properties": {
									"type": {
										"title": "type",
										"type": "string",
										"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
									},
									"nonce": {
										"title": "nonce",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"to": {
										"title": "to address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"gas": {
										"title": "gas limit",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"value": {
										"title": "value",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"input": {
										"title": "input data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"gasPrice": {
										"title": "gas price",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "The gas price willing to be paid by the sender in wei"
									},
									"chainId": {
										"title": "chainId",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "Chain ID that this transaction is valid on."
									}
								}
							}
						],
						"properties": {
							"from": {
								"title": "from",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							}
						}
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Return data",
				"schema": {
					"title": "hex encoded bytes",
					"type": "string",
					"pattern": "^0x[0-9a-f]*$"
				}
			}
		},
		{
			"name": "eth_estimateGas",
			"summary": "Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"schema": {
						"title": "Transaction object with sender",
						"type": "object",
						"required": [
							"from"
						],
						"oneOf": [
							{
								"type": "object",
								"title": "EIP-1559 transaction.",
								"required": [
									"type",
									"nonce",
									"gas",
									"value",
									"input",
									"maxFeePerGas",
									"maxPriorityFeePerGas",
									"chainId",
									"accessList"
								],
								"properties": {
									"type": {
										"title": "type",
										"type": "string",
										"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
									},
									"nonce": {
										"title": "nonce",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"to": {
										"title": "to address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"gas": {
										"title": "gas limit",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"value": {
										"title": "value",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"input": {
										"title": "input data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"maxPriorityFeePerGas": {
										"title": "max priority fee per gas",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
									},
									"maxFeePerGas": {
										"title": "max fee per gas",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
									},
									"accessList": {
										"title": "accessList",
										"type": "array",
										"description": "EIP-2930 access list - not supported",
										"items": {
											"title": "Access list entry",
											"type": "object",
											"properties": {
												"address": {
													"title": "hex encoded address",
													"type": "string",
													"pattern": "^0x[0-9,a-f,A-F]{40}$"
												},
												"storageKeys": {
													"type": "array",
													"items": {
														"title": "32 byte hex value",
														"type": "string",
														"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
													}
												}
											}
										}
									},
									"chainId": {
										"title": "chainId",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "Chain ID that this transaction is valid on."
									}
								}
							},
							{
								"type": "object",
								"title": "EIP-2930 transaction.",
								"required": [
									"type",
									"nonce",
									"gas",
									"value",
									"input",
									"gasPrice",
									"chainId",
									"accessList"
								],
								"properties": {
									"type": {
										"title": "type",
										"type": "string",
										"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
									},
									"nonce": {
										"title": "nonce",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"to": {
										"title": "to address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"gas": {
										"title": "gas limit",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"value": {
										"title": "value",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"input": {
										"title": "input data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"gasPrice": {
										"title": "gas price",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "The gas price willing to be paid by the sender in wei"
									},
									"accessList": {
										"title": "accessList",
										"type": "array",
										"description": "EIP-2930 access list - not supported",
										"items": {
											"title": "Access list entry",
											"type": "object",
											"properties": {
												"address": {
													"title": "hex encoded address",
													"type": "string",
													"pattern": "^0x[0-9,a-f,A-F]{40}$"
												},
												"storageKeys": {
													"type": "array",
													"items": {
														"title": "32 byte hex value",
														"type": "string",
														"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
													}
												}
											}
										}
									},
									"chainId": {
										"title": "chainId",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "Chain ID that this transaction is valid on."
									}
								}
							},
							{
								"type": "object",
								"title": "Legacy transaction.",
								"required": [
									"type",
									"nonce",
									"gas",
									"value",
									"input",
									"gasPrice"
								],
								"properties": {
									"type": {
										"title": "type",
										"type": "string",
										"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
									},
									"nonce": {
										"title": "nonce",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"to": {
										"title": "to address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"gas": {
										"title": "gas limit",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"value": {
										"title": "value",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"input": {
										"title": "input data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"gasPrice": {
										"title": "gas price",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "The gas price willing to be paid by the sender in wei"
									},
									"chainId": {
										"title": "chainId",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
										"description": "Chain ID that this transaction is valid on."
									}
								}
							}
						],
						"properties": {
							"from": {
								"title": "from",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							}
						}
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Gas used",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_gasPrice",
			"summary": "Returns the current price per gas in wei.",
			"params": [],
			"result": {
				"name": "Gas price",
				"schema": {
					"title": "Gas price",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_getBalance",
			"summary": "Returns the balance of the account of given address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Balance",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_getTransactionCount",
			"summary": "Returns the number of transactions sent from an address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Transaction count",
				"schema": {
					"title": "Transaction count",
					"type": "array",
					"items": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				}
			}
		},
		{
			"name": "eth_getCode",
			"summary": "Returns code at a given address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Bytecode",
				"schema": {
					"title": "hex encoded bytes",
					"type": "string",
					"pattern": "^0x[0-9a-f]*$"
				}
			}
		},
		{
			"name": "eth_sendRawTransaction",
			"summary": "Submits a raw transaction.",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"schema": {
						"title": "hex encoded bytes",
						"type": "string",
						"pattern": "^0x[0-9a-f]*$"
					}
				}
			],
			"result": {
				"name": "Transaction hash",
				"schema": {
					"title": "32 byte hex value",
					"type": "string",
					"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
				}
			}
		},
		{
			"name": "eth_getTransactionByHash",
			"summary": "Returns the information about a transaction requested by transaction hash.",
			"params": [
				{
					"name": "Transaction hash",
					"required": true,
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
					}
				}
			],
			"result": {
				"name": "Transaction information",
				"schema": {
					"type": "object",
					"title": "Transaction information",
					"required": [
						"blockHash",
						"blockNumber",
						"from",
						"hash",
						"transactionIndex"
					],
					"oneOf": [
						{
							"title": "Signed 1559 Transaction",
							"type": "object",
							"required": [
								"accessList",
								"chainId",
								"gas",
								"input",
								"maxFeePerGas",
								"maxPriorityFeePerGas",
								"nonce",
								"r",
								"s",
								"type",
								"value",
								"yParity"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"maxPriorityFeePerGas": {
									"title": "max priority fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
								},
								"maxFeePerGas": {
									"title": "max fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
								},
								"accessList": {
									"title": "accessList",
									"type": "array",
									"description": "EIP-2930 access list - not supported",
									"items": {
										"title": "Access list entry",
										"type": "object",
										"properties": {
											"address": {
												"title": "hex encoded address",
												"type": "string",
												"pattern": "^0x[0-9,a-f,A-F]{40}$"
											},
											"storageKeys": {
												"type": "array",
												"items": {
													"title": "32 byte hex value",
													"type": "string",
													"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
												}
											}
										}
									}
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"yParity": {
									"title": "yParity",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						},
						{
							"title": "Signed 2930 Transaction",
							"type": "object",
							"required": [
								"accessList",
								"chainId",
								"gas",
								"gasPrice",
								"input",
								"nonce",
								"r",
								"s",
								"type",
								"value",
								"yParity"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"gasPrice": {
									"title": "gas price",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The gas price willing to be paid by the sender in wei"
								},
								"accessList": {
									"title": "accessList",
									"type": "array",
									"description": "EIP-2930 access list - not supported",
									"items": {
										"title": "Access list entry",
										"type": "object",
										"properties": {
											"address": {
												"title": "hex encoded address",
												"type": "string",
												"pattern": "^0x[0-9,a-f,A-F]{40}$"
											},
											"storageKeys": {
												"type": "array",
												"items": {
													"title": "32 byte hex value",
													"type": "string",
													"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
												}
											}
										}
									}
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"yParity": {
									"title": "yParity",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						},
						{
							"title": "Signed Legacy Transaction",
							"type": "object",
							"required": [
								"gas",
								"gasPrice",
								"input",
								"nonce",
								"r",
								"s",
								"type",
								"v",
								"value"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"gasPrice": {
									"title": "gas price",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The gas price willing to be paid by the sender in wei"
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"v": {
									"title": "v",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						}
					],
					"properties": {
						"blockHash": {
							"title": "block hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"blockNumber": {
							"title": "block number",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"from": {
							"title": "from address",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"hash": {
							"title": "transaction hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"transactionIndex": {
							"title": "transaction index",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						}
					}
				}
			}
		},
		{
			"name": "eth_getTransactionReceipt",
			"summary": "Returns the receipt of a transaction by transaction hash.",
			"params": [
				{
					"name": "Transaction hash",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
					}
				}
			],
			"result": {
				"name": "Receipt Information",
				"schema": {
					"type": "object",
					"title": "Receipt info",
					"required": [
						"blockHash",
						"blockNumber",
						"from",
						"cumulativeGasUsed",
						"gasUsed",
						"logs",
						"logsBloom",
						"transactionHash",
						"transactionIndex",
						"effectiveGasPrice"
					],
					"properties": {
						"transactionHash": {
							"title": "transaction hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"transactionIndex": {
							"title": "transaction index",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"blockHash": {
							"title": "block hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"blockNumber": {
							"title": "block number",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"from": {
							"title": "from",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"to": {
							"title": "to",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$",
							"description": "Address of the receiver or null in a contract creation transaction."
						},
						"cumulativeGasUsed": {
							"title": "cumulative gas used",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
							"description": "The sum of gas used by this transaction and all preceding transactions in the same block."
						},
						"gasUsed": {
							"title": "gas used",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
							"description": "The amount of gas used for this specific transaction alone."
						},
						"contractAddress": {
							"title": "contract address",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$",
							"description": "The contract address created, if the transaction was a contract creation, otherwise null."
						},
						"logs": {
							"title": "logs",
							"type": "array",
							"items": {
								"title": "log",
								"type": "object",
								"required": [
									"transactionHash"
								],
								"properties": {
									"removed": {
										"title": "removed",
										"type": "boolean"
									},
									"logIndex": {
										"title": "log index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionIndex": {
										"title": "transaction index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionHash": {
										"title": "transaction hash",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"blockHash": {
										"title": "block hash",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"blockNumber": {
										"title": "block number",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"address": {
										"title": "address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"data": {
										"title": "data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"topics": {
										"title": "topics",
										"type": "array",
										"items": {
											"title": "32 hex encoded bytes",
											"type": "string",
											"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
										}
									}
								}
							}
						},
						"logsBloom": {
							"title": "logs bloom",
							"type": "string",
							"pattern": "^0x[0-9a-f]{512}$"
						},
						"root": {
							"title": "state root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$",
							"description": "The post-transaction state root. Only specified for transactions included before the Byzantium upgrade."
						},
						"status": {
							"title": "status",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
							"description": "Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade."
						},
						"effectiveGasPrice": {
							"title": "effective gas price",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
							"description": "The actual value per gas deducted from the senders account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas)."
						}
					}
				}
			}
		}
	],
	"components": {}
}